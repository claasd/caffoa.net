openapi: 3.0.1
info:
  title: Demo API
  version: '1.0'
paths:
  /users:
    get:
      tags:
        - user
      description: get information about the users
      operationId: users-get
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 1000
      responses:
        '200':
          description: return user object
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - type
                  oneOf:
                    - allOf:
                        - required:
                            - type
                            - name
                          type: object
                          properties:
                            name:
                              type: string
                              description: A fancy string with description
                            address: { }
                            birthdate:
                              type: string
                              format: date
                              nullable: true
                            emails:
                              type: array
                              items:
                                type: string
                            descriptions:
                              additionalProperties:
                                type: string
                                description: A fancy string with description
                            type:
                              enum:
                                - simple
                              type: string
                              default: simple
                            ageGroup:
                              enum:
                                - 18
                                - 40
                                - 70
                                - 120
                              type: integer
                              default: 40
                              nullable: true
                            preferredContactTime:
                              type: string
                              format: time
                              default: '12:00'
                        - type: object
                          properties:
                            id:
                              type: string
                            registrationDate:
                              type: string
                              format: date-time
                    - required:
                        - type
                        - email
                      type: object
                      properties:
                        email:
                          type: string
                          format: email
                        type:
                          enum:
                            - guest
                          type: string
                          default: guest
                  discriminator:
                    propertyName: type
                    mapping:
                      simple: '#/components/schemas/userWithId'
                      guest: '#/components/schemas/guestUser'
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                  - message
                type: object
                properties:
                  status:
                    type: string
                    description: Single string based code describing the error.
                  message:
                    type: string
                    description: Human readable error message.
    post:
      tags:
        - user
      description: create or update a user without return test
      operationId: user-post
      requestBody:
        description: a full user
        content:
          application/json:
            schema:
              oneOf:
                - required:
                    - type
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: A fancy string with description
                    address: { }
                    birthdate:
                      type: string
                      format: date
                      nullable: true
                    emails:
                      type: array
                      items:
                        type: string
                    descriptions:
                      additionalProperties:
                        type: string
                        description: A fancy string with description
                    type:
                      enum:
                        - simple
                      type: string
                      default: simple
                    ageGroup:
                      enum:
                        - 18
                        - 40
                        - 70
                        - 120
                      type: integer
                      default: 40
                      nullable: true
                    preferredContactTime:
                      type: string
                      format: time
                      default: '12:00'
                - required:
                    - type
                    - email
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    type:
                      enum:
                        - guest
                      type: string
                      default: guest
              discriminator:
                propertyName: type
                mapping:
                  simple: '#/components/schemas/user'
                  guest: '#/components/schemas/guestUser'
      responses:
        '201':
          description: User was created
          content:
            application/json:
              schema:
                required:
                  - type
                oneOf:
                  - allOf:
                      - required:
                          - type
                          - name
                        type: object
                        properties:
                          name:
                            type: string
                            description: A fancy string with description
                          address: { }
                          birthdate:
                            type: string
                            format: date
                            nullable: true
                          emails:
                            type: array
                            items:
                              type: string
                          descriptions:
                            additionalProperties:
                              type: string
                              description: A fancy string with description
                          type:
                            enum:
                              - simple
                            type: string
                            default: simple
                          ageGroup:
                            enum:
                              - 18
                              - 40
                              - 70
                              - 120
                            type: integer
                            default: 40
                            nullable: true
                          preferredContactTime:
                            type: string
                            format: time
                            default: '12:00'
                      - type: object
                        properties:
                          id:
                            type: string
                          registrationDate:
                            type: string
                            format: date-time
                  - required:
                      - type
                      - email
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                      type:
                        enum:
                          - guest
                        type: string
                        default: guest
                discriminator:
                  propertyName: type
                  mapping:
                    simple: '#/components/schemas/userWithId'
                    guest: '#/components/schemas/guestUser'
  '/users/{userId}':
    put:
      tags:
        - user
      description: create or update a user
      operationId: user-put
      requestBody:
        description: a full user
        content:
          application/json:
            schema:
              required:
                - type
              oneOf:
                - required:
                    - type
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: A fancy string with description
                    address: { }
                    birthdate:
                      type: string
                      format: date
                      nullable: true
                    emails:
                      type: array
                      items:
                        type: string
                    descriptions:
                      additionalProperties:
                        type: string
                        description: A fancy string with description
                    type:
                      enum:
                        - simple
                      type: string
                      default: simple
                    ageGroup:
                      enum:
                        - 18
                        - 40
                        - 70
                        - 120
                      type: integer
                      default: 40
                      nullable: true
                    preferredContactTime:
                      type: string
                      format: time
                      default: '12:00'
                - required:
                    - type
                    - email
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    type:
                      enum:
                        - guest
                      type: string
                      default: guest
              discriminator:
                propertyName: type
                mapping:
                  simple: '#/components/schemas/user'
                  guest: '#/components/schemas/guestUser'
      responses:
        '200':
          description: User was updated
          content:
            application/json:
              schema:
                required:
                  - type
                oneOf:
                  - allOf:
                      - required:
                          - type
                          - name
                        type: object
                        properties:
                          name:
                            type: string
                            description: A fancy string with description
                          address: { }
                          birthdate:
                            type: string
                            format: date
                            nullable: true
                          emails:
                            type: array
                            items:
                              type: string
                          descriptions:
                            additionalProperties:
                              type: string
                              description: A fancy string with description
                          type:
                            enum:
                              - simple
                            type: string
                            default: simple
                          ageGroup:
                            enum:
                              - 18
                              - 40
                              - 70
                              - 120
                            type: integer
                            default: 40
                            nullable: true
                          preferredContactTime:
                            type: string
                            format: time
                            default: '12:00'
                      - type: object
                        properties:
                          id:
                            type: string
                          registrationDate:
                            type: string
                            format: date-time
                  - required:
                      - type
                      - email
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                      type:
                        enum:
                          - guest
                        type: string
                        default: guest
                discriminator:
                  propertyName: type
                  mapping:
                    simple: '#/components/schemas/userWithId'
                    guest: '#/components/schemas/guestUser'
        '201':
          description: User was created
          content:
            application/json:
              schema:
                required:
                  - type
                oneOf:
                  - allOf:
                      - required:
                          - type
                          - name
                        type: object
                        properties:
                          name:
                            type: string
                            description: A fancy string with description
                          address: { }
                          birthdate:
                            type: string
                            format: date
                            nullable: true
                          emails:
                            type: array
                            items:
                              type: string
                          descriptions:
                            additionalProperties:
                              type: string
                              description: A fancy string with description
                          type:
                            enum:
                              - simple
                            type: string
                            default: simple
                          ageGroup:
                            enum:
                              - 18
                              - 40
                              - 70
                              - 120
                            type: integer
                            default: 40
                            nullable: true
                          preferredContactTime:
                            type: string
                            format: time
                            default: '12:00'
                      - type: object
                        properties:
                          id:
                            type: string
                          registrationDate:
                            type: string
                            format: date-time
                  - required:
                      - type
                      - email
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                      type:
                        enum:
                          - guest
                        type: string
                        default: guest
                discriminator:
                  propertyName: type
                  mapping:
                    simple: '#/components/schemas/userWithId'
                    guest: '#/components/schemas/guestUser'
    patch:
      tags:
        - user
      description: update a user
      operationId: user-patch
      requestBody:
        description: a full user
        content:
          application/json:
            schema:
              required:
                - type
                - name
              type: object
              properties:
                name:
                  type: string
                  description: A fancy string with description
                address: { }
                birthdate:
                  type: string
                  format: date
                  nullable: true
                emails:
                  type: array
                  items:
                    type: string
                descriptions:
                  additionalProperties:
                    type: string
                    description: A fancy string with description
                type:
                  enum:
                    - simple
                  type: string
                  default: simple
                ageGroup:
                  enum:
                    - 18
                    - 40
                    - 70
                    - 120
                  type: integer
                  default: 40
                  nullable: true
                preferredContactTime:
                  type: string
                  format: time
                  default: '12:00'
      responses:
        '200':
          description: User was updated
          content:
            application/json:
              schema:
                allOf:
                  - required:
                      - type
                      - name
                    type: object
                    properties:
                      name:
                        type: string
                        description: A fancy string with description
                      address: { }
                      birthdate:
                        type: string
                        format: date
                        nullable: true
                      emails:
                        type: array
                        items:
                          type: string
                      descriptions:
                        additionalProperties:
                          type: string
                          description: A fancy string with description
                      type:
                        enum:
                          - simple
                        type: string
                        default: simple
                      ageGroup:
                        enum:
                          - 18
                          - 40
                          - 70
                          - 120
                        type: integer
                        default: 40
                        nullable: true
                      preferredContactTime:
                        type: string
                        format: time
                        default: '12:00'
                  - type: object
                    properties:
                      id:
                        type: string
                      registrationDate:
                        type: string
                        format: date-time
    get:
      tags:
        - user
      description: get information about the users
      operationId: user-get
      responses:
        '200':
          description: return user object
          content:
            application/json:
              schema:
                allOf:
                  - required:
                      - type
                      - name
                    type: object
                    properties:
                      name:
                        type: string
                        description: A fancy string with description
                      address: { }
                      birthdate:
                        type: string
                        format: date
                        nullable: true
                      emails:
                        type: array
                        items:
                          type: string
                      descriptions:
                        additionalProperties:
                          type: string
                          description: A fancy string with description
                      type:
                        enum:
                          - simple
                        type: string
                        default: simple
                      ageGroup:
                        enum:
                          - 18
                          - 40
                          - 70
                          - 120
                        type: integer
                        default: 40
                        nullable: true
                      preferredContactTime:
                        type: string
                        format: time
                        default: '12:00'
                  - type: object
                    properties:
                      id:
                        type: string
                      registrationDate:
                        type: string
                        format: date-time
    parameters:
      - name: userId
        in: path
        description: the user id.
        required: true
        schema:
          type: string
  '/users/born-before/{date}':
    get:
      tags:
        - user
      description: get
      operationId: users.get.by.birthdate
      responses:
        '200':
          description: return user object
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - type
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: A fancy string with description
                    address: { }
                    birthdate:
                      type: string
                      format: date
                      nullable: true
                    emails:
                      type: array
                      items:
                        type: string
                    descriptions:
                      additionalProperties:
                        type: string
                        description: A fancy string with description
                    type:
                      enum:
                        - simple
                      type: string
                      default: simple
                    ageGroup:
                      enum:
                        - 18
                        - 40
                        - 70
                        - 120
                      type: integer
                      default: 40
                      nullable: true
                    preferredContactTime:
                      type: string
                      format: time
                      default: '12:00'
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                  - message
                type: object
                properties:
                  status:
                    type: string
                    description: Single string based code describing the error.
                  message:
                    type: string
                    description: Human readable error message.
    parameters:
      - name: date
        in: path
        required: true
        schema:
          type: string
          format: date
  /users/filter/byAge:
    get:
      tags:
        - user
      description: get
      operationId: users-search-by-date
      responses:
        '200':
          description: return user object
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - type
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: A fancy string with description
                    address: { }
                    birthdate:
                      type: string
                      format: date
                      nullable: true
                    emails:
                      type: array
                      items:
                        type: string
                    descriptions:
                      additionalProperties:
                        type: string
                        description: A fancy string with description
                    type:
                      enum:
                        - simple
                      type: string
                      default: simple
                    ageGroup:
                      enum:
                        - 18
                        - 40
                        - 70
                        - 120
                      type: integer
                      default: 40
                      nullable: true
                    preferredContactTime:
                      type: string
                      format: time
                      default: '12:00'
        '400':
          description: Error
          content:
            application/json:
              schema:
                required:
                  - status
                  - message
                type: object
                properties:
                  status:
                    type: string
                    description: Single string based code describing the error.
                  message:
                    type: string
                    description: Human readable error message.
    parameters:
      - name: before
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: after
        in: query
        required: true
        schema:
          type: string
          format: date
          default: '1950-01-01T00:00:00.0000000'
      - name: maxResults
        in: query
        schema:
          type: integer
          nullable: true
  '/startLongRunningFunction/{id}':
    post:
      tags:
        - maintainance
      description: start a long running function via durable functions
      operationId: long-running-function
      responses:
        '202':
          description: started long running function
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    enum:
                      - running
                      - success
                      - failure
                    type: string
                  result:
                    required:
                      - type
                    oneOf:
                      - required:
                          - type
                          - name
                        type: object
                        properties:
                          name:
                            type: string
                            description: A fancy string with description
                          address: { }
                          birthdate:
                            type: string
                            format: date
                            nullable: true
                          emails:
                            type: array
                            items:
                              type: string
                          descriptions:
                            additionalProperties:
                              type: string
                              description: A fancy string with description
                          type:
                            enum:
                              - simple
                            type: string
                            default: simple
                          ageGroup:
                            enum:
                              - 18
                              - 40
                              - 70
                              - 120
                            type: integer
                            default: 40
                            nullable: true
                          preferredContactTime:
                            type: string
                            format: time
                            default: '12:00'
                      - required:
                          - type
                          - email
                        type: object
                        properties:
                          email:
                            type: string
                            format: email
                          type:
                            enum:
                              - guest
                            type: string
                            default: guest
                    discriminator:
                      propertyName: type
                      mapping:
                        simple: '#/components/schemas/user'
                        guest: '#/components/schemas/guestUser'
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
components: { }